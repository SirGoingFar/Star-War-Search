apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
//apply from: "$project.rootDir/tools/vcs-script.gradle"

android {

    compileSdkVersion projectToolVersion.compileSdkVersion
    buildToolsVersion projectToolVersion.buildToolsVersion

    defaultConfig {
        applicationId "com.trivago.starwarsearch"
        minSdkVersion projectToolVersion.minSdkVersion
        targetSdkVersion projectToolVersion.targetSdkVersion

        versionCode /*gitVersionCode*/ 1
        versionName /*"$gitVersionName"*/ "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary true
        multiDexEnabled true
    }

    buildTypes {

        debug {
            applicationIdSuffix ".qa"
            resValue "string", "app_name", "Star War Search QA"
            buildConfigField "String", "APP_BASE_URL", '"https://swapi.dev/"'
        }

        release {
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue "string", "app_name", "Star War Search"
            buildConfigField "String", "APP_BASE_URL", '"add_production_url"'
        }

    }

    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Android Dependencies
    implementation androidDependencies.kotlin
    implementation androidDependencies.multidex
    implementation androidDependencies.core
    implementation androidDependencies.constraintLayout
    implementation androidDependencies.material
    implementation androidDependencies.coroutineLifeCycle
    implementation androidDependencies.fragment
    implementation androidDependencies.swipeRefresh
    implementation androidDependencies.coroutineKotlin
    implementation androidDependencies.coroutineAndroid
    implementation androidDependencies.lifeCycle
    implementation androidDependencies.livedata
    implementation androidDependencies.viewmodel

    //Third-party Libraries Dependencies
    implementation thirdPartyLibDepencies.dagger
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    kapt thirdPartyLibDepencies.daggerCompiler
    implementation thirdPartyLibDepencies.circularImageView
    implementation thirdPartyLibDepencies.picasso
    implementation thirdPartyLibDepencies.retrofit
    implementation thirdPartyLibDepencies.gsonConverter
    implementation thirdPartyLibDepencies.loggingInterceptor
    implementation thirdPartyLibDepencies.calligraphy
    implementation thirdPartyLibDepencies.calligraphyViewPump

    //Test Dependencies
    testImplementation testDependecies.junit
    androidTestImplementation testDependecies.androidTestExt
    androidTestImplementation testDependecies.androidXEspresso
    androidTestImplementation testDependecies.coroutineTest
    testImplementation testDependecies.coroutineTest
    implementation testDependecies.fragmentTest
    testImplementation testDependecies.androidTestCore
    implementation testDependecies.androidXTestCore
    testImplementation testDependecies.architectureTest
    testImplementation testDependecies.hamcrest
    testImplementation testDependecies.androidXTestRUnner
    testImplementation testDependecies.robolectric
}
